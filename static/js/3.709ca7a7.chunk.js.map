{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","active","dialogNavLink","dialog__img","src","source","name","message","Message","maxLength10","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogs__items","AddMessageForm","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"0OAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAG,eAHT,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBCf7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,oBCAvND,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,2BAA2B,YAAc,gCAAgC,cAAgB,oC,oBCAxJD,EAAOC,QAAU,CAAC,QAAU,2B,gHCqBbC,EAjBI,SAACN,GAGlB,IAAIO,EAAO,aAAeP,EAAMQ,GAAK,GAIrC,OACE,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACjC,kBAAC,IAAD,CAASH,UAAWC,IAAEG,cAAeZ,GAAIM,GAAM,yBAAKE,UAAWC,IAAEI,YAAaC,IAAKf,EAAMgB,SAAU,8BAAOhB,EAAMiB,OAChH,yBAAKR,UAAWC,IAAEC,QAASX,EAAMkB,W,kBCCxBC,EAZC,SAACnB,GAIf,OAEI,yBAAKS,UAAWC,IAAEQ,SAAUlB,EAAMkB,U,yCCLlCE,EAAcC,YAAiB,IAmBpBC,EAFaC,YAAU,CAACC,KAAM,wBAAjBD,EAfP,SAACvB,GAIpB,OAAO,0BAAMyB,SAAUzB,EAAM0B,cAC3B,6BACM,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,iBAC/Ba,SAAU,CAACC,IAAUX,GAAcY,YAAY,2BAEnD,6BACE,0DC4BGC,EAlCC,SAACjC,GAEf,IAAIkC,EAAclC,EAAMkC,YAEpBC,EAAkBD,EAAYE,QAAQC,KAAI,SAACC,GAAD,OAC5C,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAE9B,GAAIA,GAAI8B,EAAE9B,GAAIQ,OAAQsB,EAAEtB,YAGvDwB,EAAmBN,EAAYO,SAASJ,KAAI,SAACK,GAAD,OAC9C,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAElC,GAAIA,GAAIkC,EAAElC,QAIhD,IAAKR,EAAMN,OAAQ,OAAO,kBAAC,IAAD,CAAUO,GAAI,WAMxC,OACE,yBAAKQ,UAAWC,IAAE0B,SAChB,yBAAK3B,UAAWC,IAAEiC,gBAAiBR,GACnC,kBAACS,EAAD,CAAqBnB,SAPL,SAACoB,GACnB7C,EAAM8C,YAAYD,EAAOE,mBAOvB,yBAAKtC,UAAWC,IAAE+B,UACfD,K,wBCVMQ,sBACb7C,aAhBoB,SAACV,GACrB,MAAM,CACJyC,YAAazC,EAAMyC,gBAIE,SAACe,GACxB,MAAM,CACJH,YAAa,SAACC,GACZE,EAASC,YAAmBH,SAQhCnD,IAFaoD,CAGZf","file":"static/js/3.709ca7a7.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from \"react-router-dom\"\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n  });\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n\n            return <Component {...this.props} />\n        }\n    }\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogs__items\":\"Dialogs_dialogs__items__1o0VM\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"active\":\"DialogItem_active__2qnc5\",\"dialog__img\":\"DialogItem_dialog__img__2MY5K\",\"dialogNavLink\":\"DialogItem_dialogNavLink__2KYQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\"};","import React from \"react\";\nimport s from \"./DialogItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\n// import Message from \"./../Message/Message\";\n\nconst DialogItem = (props) => {\n\n\n  let path = \"/dialogs/\" + (props.id + 2);\n\n  \n\n  return (\n    <div className={s.dialog + \" \" + s.active}>\n      <NavLink className={s.dialogNavLink} to={path}><img className={s.dialog__img} src={props.source} /><span>{props.name}</span></NavLink>\n      <div className={s.dialog}>{props.message}</div>\n    \n    </div>\n  );\n};\n\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from \"./Message.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Message = (props) => {\n\n  \n\n  return (\n    \n      <div className={s.message}>{props.message}</div>\n\n      \n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\nimport { Textarea } from \"../common/FormsControl/FormsControl\"\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst addMessageForm = (props) => {\n\n  \n\n    return <form onSubmit={props.handleSubmit}>\n      <div>\n            <Field component={Textarea} name='newMessageBody'\n              validate={[required, maxLength10]} placeholder='Enter your message...'/>\n          </div>\n          <div>\n            <button>Add a new message</button>\n          </div>\n    </form>\n  }\n  \n  const AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(addMessageForm)\n\n  export default AddMessageFormRedux;","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\n// import { NavLink } from \"react-router-dom\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { sendMessageCreator, updateNewMessageChangeBodyCreator } from \"../../Redux/dialogs-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport AddMessageFormRedux from \"./AddMessageForm\";\n\n\n\nconst Dialogs = (props) => {\n\n  let dialogsPage = props.dialogsPage;\n\n  let dialogsElements = dialogsPage.dialogs.map((d) => (\n    <DialogItem name={d.name} key={d.id} id={d.id} source={d.source} />\n  ));\n\n  let messagesElements = dialogsPage.messages.map((m) => (\n    <Message message={m.message} key={m.id} id={m.id} />\n  ));\n\n  \n  if (!props.isAuth) return <Redirect to={'/login'} />;\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  }\n  \n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogs__items}>{dialogsElements}</div>\n      <AddMessageFormRedux onSubmit={addNewMessage} />\n      <div className={s.messages}>\n        {messagesElements}\n        \n      </div>\n    </div>\n  );\n};\n\n\n\n\nexport default Dialogs;\n","import React from \"react\";\n\nimport { sendMessageCreator } from \"../../Redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\n\n\nlet mapStateToProps = (state) => {\n  return{\n    dialogsPage: state.dialogsPage\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return{\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    },\n    \n  }\n}\n\nexport default compose (\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n) (Dialogs);\n\n\n"],"sourceRoot":""}