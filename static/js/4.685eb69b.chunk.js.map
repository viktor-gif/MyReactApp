{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditeMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","fromSummeryError","createField","Input","Textarea","type","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","setEditMode","info","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","buttonAddPost","MyPosts","memo","console","log","postsElements","posts","reverse","p","id","MyPostsWrap","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","compose","withRouter"],"mappings":"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","file":"static/js/4.685eb69b.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from \"react-router-dom\"\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n  });\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n\n            return <Component {...this.props} />\n        }\n    }\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ProfileInfo_info__3dsdE\",\"contacts\":\"ProfileInfo_contacts__3y62P\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1Fgjo\",\"contact\":\"ProfileInfo_contact__1N3gp\",\"fromSummeryError\":\"ProfileInfo_fromSummeryError__S39fU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPostsWrap\":\"MyPosts_MyPostsWrap__2llrm\",\"buttonAddPost\":\"MyPosts_buttonAddPost__2V_3z\",\"post\":\"MyPosts_post__38Ltf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditeMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditeMode(true);\n  };\n  const deactivateEditMode = () => {\n    setEditeMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <b>Status</b>:{\" \"}\n          <span onDoubleClick={activateEditMode}>\n            {props.status || \"--------\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onChange={onStatusChange}\n            onBlur={deactivateEditMode}\n            autoFocus={true}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport { reduxForm } from \"redux-form\";\nimport {\n  createField,\n  Input,\n  Textarea,\n} from \"../../common/FormsControl/FormsControl\";\n\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <button>save</button>\n      </div>\n\n      {error && <div className={s.fromSummeryError}>{error}</div>}\n\n      <>\n        <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\n      </>\n      <div>\n        <b>About me</b>: {createField(\"About me\", \"aboutMe\", [], Textarea)}\n      </div>\n      <div>\n        <b>Looking for a job</b>:\n        {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\n      </div>\n      <div>\n        <b>My professional skills</b>:\n        {createField(\n          \"My professional skills\",\n          \"lookingForAJobDescription\",\n          [],\n          Textarea\n        )}\n      </div>\n\n      <div>\n        <b>Contacts</b>:{\" \"}\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <div key={key} className={s.contact}>\n              <b>\n                {key}: {createField(key, \"contacts.\" + key, [], Input)}\n              </b>\n            </div>\n          );\n        })}\n      </div>\n    </form>\n  );\n};\n\nconst ProfileDataReduxForm = reduxForm({ form: \"edit-profile\" })(\n  ProfileDataForm\n);\n\nexport default ProfileDataReduxForm;\n","import React, { useState } from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../common/preloader/preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/user.jpg\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  savePhoto,\n  saveProfile,\n}) => {\n  let [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = (formData) => {\n    saveProfile(formData).then(() => {\n      setEditMode(false);\n    });\n  };\n\n  return (\n    <div>\n      <div className={s.info}>\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\n        {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\n\n        {editMode ? (\n          <ProfileDataForm\n            initialValues={profile}\n            profile={profile}\n            onSubmit={onSubmit}\n          />\n        ) : (\n          <ProfileData\n            goToEditMode={() => {\n              setEditMode(true);\n            }}\n            profile={profile}\n            isOwner={isOwner}\n          />\n        )}\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  );\n};\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n  return (\n    <div>\n      {isOwner && (\n        <div>\n          <button onClick={goToEditMode}>edit</button>\n        </div>\n      )}\n      <div>\n        <b>Full name</b>: {profile.fullName}\n      </div>\n      <div>\n        <b>About me</b>: {profile.aboutMe || \"Tell about you\"}\n      </div>\n      <div>\n        <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\n      </div>\n      {profile.lookingForAJob && (\n        <div>\n          <b>My professional skills</b>: {profile.lookingForAJobDescription}\n        </div>\n      )}\n      <div>\n        <b>Contacts</b>:{\" \"}\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <Contact\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key]}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst Contact = ({ contactTitle, contactValue }) => {\n  return (\n    <div className={s.contact}>\n      <b>{contactTitle}</b>: {contactValue}\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from 'react';\nimport s from './Post.module.css';\n\n\nconst Post = (props) => {\n\n\n  return (\n    <div className={s.item}>\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\n      { props.message }\n      <div className={s.item}>\n      <span>like </span>{ props.likesCount }\n      <button>\n        <img src=\"https://www.clipartkey.com/mpngs/m/278-2785465_heart-clipart-jpeg-red-heart-emoji-png.png\" />\n      </button>\n    </div>\n    </div>\n  )\n\n}\n\nexport default Post;","import React, { Component, PureComponent } from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  required,\n  maxLengthCreator,\n} from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../common/FormsControl/FormsControl\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          name=\"newPostText\"\n          component={Textarea}\n          placeholder={\"Post message\"}\n          validate={[required, maxLength10]}\n        />\n      </div>\n      <div className={s.buttonAddPost}>\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddNewPostFormRedux = reduxForm({ form: \"profileAddNewPostForm\" })(\n  AddNewPostForm\n);\n\nconst MyPosts = React.memo((props) => {\n  console.log(\"RENDER\");\n  let postsElements = [...props.posts]\n    .reverse()\n    .map((p) => (\n      <Post\n        message={p.message}\n        key={p.id}\n        id={p.id}\n        likesCount={p.likesCount}\n      />\n    ));\n\n  const onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={s.MyPostsWrap}>\n      <h3>My posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n      <div className={s.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nexport default MyPosts;\n","import React from \"react\";\nimport MyPosts from \"./MyPosts\";\nimport { addPostActionCreator } from \"../../../Redux/profile-reducer\";\nimport { connect } from \"react-redux\";\n\n\n\nconst mapStateToProps = (state) => {\n  return{\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n  \n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo\n        savePhoto={props.savePhoto}\n        isOwner={props.isOwner}\n        profile={props.profile}\n        status={props.status}\n        saveProfile={props.saveProfile}\n        updateStatus={props.updateStatus}\n      />\n\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  getUserProfile,\n  getStatus,\n  savePhoto,\n  saveProfile,\n  updateStatus,\n} from \"../../Redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    // console.log('RENDER PROFILE');\n    return (\n      <div>\n        <Profile\n          {...this.props}\n          isOwner={!this.props.match.params.userId}\n          profile={this.props.profile}\n          status={this.props.status}\n          updateStatus={this.props.updateStatus}\n          savePhoto={this.props.savePhoto}\n          // saveProfile={this.props.saveProfile}\n        />\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  // console.log('mapStateToProps PROFILE');\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    getUserProfile,\n    getStatus,\n    updateStatus,\n    savePhoto,\n    saveProfile,\n  }),\n  withRouter\n  // withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}